# Create the new instance template
steps:
- name: 'gcr.io/cloud-builders/gcloud'
  id: create-instance-template
  args:
    - compute
    - instance-templates
    - create-with-container
    - cloud-build-instance-template-$_ENV-$SHORT_SHA
    - --custom-cpu=1
    - --custom-memory=2GB
    - --boot-disk-size=20GB
    - --region=us-central1
    - --subnet=default
    - --tags=http-server
    - --container-image
    - us-central1-docker.pkg.dev/prj-gradient-omar/python-repo/python-image:latest

#creates managed instance group
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args: ['-c','gcloud compute instance-groups managed create cloudbuild-mig --template cloud-build-instance-template-$_ENV-$SHORT_SHA  --size 1 --region us-central1']  

# Create an autoscaler policy and attach it to the managed instance group
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      gcloud compute instance-groups managed set-autoscaling cloudbuild-mig \
        --region=us-central1 \
        --max-num-replicas=10 \
        --target-cpu-utilization=0.5 \
        --cool-down-period=60
        
- name: 'gcr.io/cloud-builders/git'
  args: ['clone', 'https://github.com/OmarHaka/cloud-Pythonweb.git', '--branch=cloud-build-CDcreate', 'app']
  
- name: 'gcr.io/cloud-builders/gcloud'
  id: get-instance-names
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      INSTANCES=$(gcloud compute instance-groups managed list-instances cloudbuild-mig --region=us-central1 --format='value(NAME)')
      export INSTANCE_NAMES=$(echo $INSTANCES | tr " " "\n" | tr "\n" "," | sed 's/,$//')

  # Get the external IP addresses of the instances
- name: 'gcr.io/cloud-builders/gcloud'
  id: get-external-ips
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      EXTERNAL_IPS=$(gcloud compute instances describe $INSTANCE_NAMES --region=us-central1 --format='value(networkInterfaces[0].accessConfigs[0].natIP)')
      export FLASK_APP_URL=$(echo $EXTERNAL_IPS | cut -d " " -f 1)

  # Install JMeter (if not using a pre-installed Docker image)
- name: 'gcr.io/cloud-builders/gcloud'
  id: install-jmeter
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      apt-get update && apt-get install -y jmeter

  # Run the JMeter test plan
- name: 'gcr.io/cloud-builders/gcloud'
  id: run-jmeter
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      jmeter -n -t app/load_test_plan.jmx -Jflask_app_url=$FLASK_APP_URL -l results.jtl -e -o report/
        
- name: 'gcr.io/cloud-builders/gsutil'
  args: ['cp', 'report/index.html', 'gs://omar_python']
options:
 logging: CLOUD_LOGGING_ONLY
 dynamicSubstitutions: true
